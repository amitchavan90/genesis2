log_format api_logs '$time_iso8601 $remote_addr "$request" $status '
                     '$body_bytes_sent "$http_referer" "$http_cookie" '
                     '"$http_user_agent" [$request_body_chop]';

upstream prod_proxy_admin {
    server 127.0.0.1:8080;
}

upstream prod_proxy_consumer {
    server 127.0.0.1:8082;
}

server {
    # http only respond to certbot challenge
    server_name admin.gn.latitude28.cn admin.gn.l28produce.com.au;
    listen 80;
    
    # cerbot challenge
    # Used by Lets Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot_challenge;
    }

    if ($uri !~ .well-known) {
        return 301 https://$host$request_uri;
    }
}

server {
    server_name admin.gn.latitude28.cn admin.gn.l28produce.com.au;

    # ssl cert
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/admin.gn.latitude28.cn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/admin.gn.latitude28.cn/privkey.pem;

    # disabled gzip. prevents BREACH, CRIME
    gzip off;

    location /api {
        proxy_pass http://prod_proxy_admin;
        proxy_read_timeout 196000s;
        proxy_set_header Host $host;

        # forward user details
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;

        # log api requests
        # note: apt install libnginx-mod-http-lua
        set $request_body_chop '-';
        access_by_lua_block {
          -- read, and exit if empty
          ngx.req.read_body()
          local body = ngx.req.get_body_data()
          if body == nil then
            return
          end
          -- protect the password
          i, j = body:find("password")
          if i ~= nil then
            ngx.var.request_body_chop = body:sub(1,j) .. "********"
            return
          end
          -- log first 4k bytes
          ngx.var.request_body_chop = body:sub(1,4096)
        }

        error_log /var/log/nginx/api-admin-error.log;
        access_log /var/log/nginx/api-admin-access.log api_logs;
    }

    location / {
        root /usr/share/latitude28/genesis/web;
        try_files /maintenance.html $uri /admin.html;
    }
}

server {
    # http only respond to certbot challenge
    server_name consumer.gn.latitude28.cn consumer.gn.l28produce.com.au;
    listen 80;

    # cerbot challenge
    # Used by Lets Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot_challenge;
    }

    if ($uri !~ .well-known) {
        return 301 https://$host$request_uri;
    }
}

server {
    server_name consumer.gn.latitude28.cn consumer.gn.l28produce.com.au;

    # ssl cert
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/admin.gn.latitude28.cn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/admin.gn.latitude28.cn/privkey.pem;

    # disabled gzip. prevents BREACH, CRIME
    gzip off;

    location /api {
        proxy_pass http://prod_proxy_consumer;
        proxy_read_timeout 196000s;
        proxy_set_header Host $host;

        # forward user details
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;

        # log api requests
        # note: apt install libnginx-mod-http-lua
        set $request_body_chop '-';
        access_by_lua_block {
          -- read, and exit if empty
          ngx.req.read_body()
          local body = ngx.req.get_body_data()
          if body == nil then
            return
          end
          -- protect the password
          i, j = body:find("password")
          if i ~= nil then
            ngx.var.request_body_chop = body:sub(1,j) .. "********"
            return
          end
          -- log first 4k bytes
          ngx.var.request_body_chop = body:sub(1,4096)
        }

        error_log /var/log/nginx/api-consumer-error.log;
        access_log /var/log/nginx/api-consumer-access.log api_logs;
    }

    # for wechat mp url auth
    location /api/steak/ZwLGFBAL10.txt {
        return 200 '8b8a8b3ba30eb7b687a83bc55e446db4';
    }

    location / {
        root /usr/share/latitude28/genesis/web;
        try_files /maintenance.html $uri /consumer.html;
    }
}